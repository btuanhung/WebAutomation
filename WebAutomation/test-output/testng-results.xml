<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="4" failed="3" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[<br>Screenshot taken current URL: ]]>
    </line>
    <line>
      <![CDATA[<a href="C:\Users\Minh Hung\eclipse-workspace\WebAutomation\Screenshots\funixExample2.png"><img src='C:\Users\Minh Hung\eclipse-workspace\WebAutomation\Screenshots\funixExample2.png'height='240' width='418'/></a><br>]]>
    </line>
    <line>
      <![CDATA[<br>Screenshot taken current URL: ]]>
    </line>
    <line>
      <![CDATA[<a href="C:\Users\Minh Hung\eclipse-workspace\WebAutomation\Screenshots\funixExample4.png"><img src='C:\Users\Minh Hung\eclipse-workspace\WebAutomation\Screenshots\funixExample4.png'height='240' width='418'/></a><br>]]>
    </line>
    <line>
      <![CDATA[<br>Screenshot taken current URL: ]]>
    </line>
    <line>
      <![CDATA[<a href="C:\Users\Minh Hung\eclipse-workspace\WebAutomation\Screenshots\funixExample5.png"><img src='C:\Users\Minh Hung\eclipse-workspace\WebAutomation\Screenshots\funixExample5.png'height='240' width='418'/></a><br>]]>
    </line>
  </reporter-output>
  <suite started-at="2022-11-05T16:22:17 ICT" name="Suite" finished-at="2022-11-05T16:24:14 ICT" duration-ms="116639">
    <groups>
    </groups>
    <test started-at="2022-11-05T16:22:17 ICT" name="Test" finished-at="2022-11-05T16:24:14 ICT" duration-ms="116639">
      <class name="com.automation.test.TC_LoginTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:22:17 ICT" name="init" finished-at="2022-11-05T16:22:30 ICT" duration-ms="12636" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="Test(java.lang.String,java.lang.String)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:22:31 ICT" name="Test" data-provider="Excel" finished-at="2022-11-05T16:22:51 ICT" duration-ms="20566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[funixExample1@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Abc@1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:22:51 ICT" name="takeScreenshot" finished-at="2022-11-05T16:22:53 ICT" duration-ms="2003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test status=SUCCESS method=TC_LoginTest.Test(java.lang.String,java.lang.String)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="Test(java.lang.String,java.lang.String)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:22:53 ICT" name="Test" data-provider="Excel" finished-at="2022-11-05T16:23:03 ICT" duration-ms="9787" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[funixExample2@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Abc@13579]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [My account] but found [Authentication]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [My account] but found [Authentication]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.automation.pom.LoginPage.Login(LoginPage.java:42)
at com.automation.test.TC_LoginTest.Test(TC_LoginTest.java:21)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:23:03 ICT" name="takeScreenshot" finished-at="2022-11-05T16:23:05 ICT" duration-ms="2217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test status=FAILURE method=TC_LoginTest.Test(java.lang.String,java.lang.String)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br>Screenshot taken current URL: ]]>
            </line>
            <line>
              <![CDATA[<a href="C:\Users\Minh Hung\eclipse-workspace\WebAutomation\Screenshots\funixExample2.png"><img src='C:\Users\Minh Hung\eclipse-workspace\WebAutomation\Screenshots\funixExample2.png'height='240' width='418'/></a><br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="Test(java.lang.String,java.lang.String)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:23:05 ICT" name="Test" data-provider="Excel" finished-at="2022-11-05T16:23:18 ICT" duration-ms="13059" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[funixExample3@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Funix1122]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:23:18 ICT" name="takeScreenshot" finished-at="2022-11-05T16:23:20 ICT" duration-ms="2006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test status=SUCCESS method=TC_LoginTest.Test(java.lang.String,java.lang.String)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="Test(java.lang.String,java.lang.String)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:23:20 ICT" name="Test" data-provider="Excel" finished-at="2022-11-05T16:23:27 ICT" duration-ms="7199" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[funixExample4@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Funix1234567]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [My account] but found [Authentication]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [My account] but found [Authentication]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.automation.pom.LoginPage.Login(LoginPage.java:42)
at com.automation.test.TC_LoginTest.Test(TC_LoginTest.java:21)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:23:27 ICT" name="takeScreenshot" finished-at="2022-11-05T16:23:30 ICT" duration-ms="2157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test status=FAILURE method=TC_LoginTest.Test(java.lang.String,java.lang.String)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br>Screenshot taken current URL: ]]>
            </line>
            <line>
              <![CDATA[<a href="C:\Users\Minh Hung\eclipse-workspace\WebAutomation\Screenshots\funixExample4.png"><img src='C:\Users\Minh Hung\eclipse-workspace\WebAutomation\Screenshots\funixExample4.png'height='240' width='418'/></a><br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="Test(java.lang.String,java.lang.String)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:23:30 ICT" name="Test" data-provider="Excel" finished-at="2022-11-05T16:23:38 ICT" duration-ms="8110" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[funixExample5@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [My account] but found [Authentication]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [My account] but found [Authentication]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.automation.pom.LoginPage.Login(LoginPage.java:42)
at com.automation.test.TC_LoginTest.Test(TC_LoginTest.java:21)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:23:38 ICT" name="takeScreenshot" finished-at="2022-11-05T16:23:40 ICT" duration-ms="2206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test status=FAILURE method=TC_LoginTest.Test(java.lang.String,java.lang.String)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<br>Screenshot taken current URL: ]]>
            </line>
            <line>
              <![CDATA[<a href="C:\Users\Minh Hung\eclipse-workspace\WebAutomation\Screenshots\funixExample5.png"><img src='C:\Users\Minh Hung\eclipse-workspace\WebAutomation\Screenshots\funixExample5.png'height='240' width='418'/></a><br>]]>
            </line>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="Test(java.lang.String,java.lang.String)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:23:40 ICT" name="Test" data-provider="Excel" finished-at="2022-11-05T16:23:55 ICT" duration-ms="14736" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[funixExample6@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Abc@000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:23:55 ICT" name="takeScreenshot" finished-at="2022-11-05T16:23:57 ICT" duration-ms="2011" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test status=SUCCESS method=TC_LoginTest.Test(java.lang.String,java.lang.String)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="Test(java.lang.String,java.lang.String)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:23:57 ICT" name="Test" data-provider="Excel" finished-at="2022-11-05T16:24:12 ICT" duration-ms="15219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[funixExample7@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Abc@111]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:24:12 ICT" name="takeScreenshot" finished-at="2022-11-05T16:24:14 ICT" duration-ms="2015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test status=SUCCESS method=TC_LoginTest.Test(java.lang.String,java.lang.String)[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="terminate()[pri:0, instance:com.automation.test.TC_LoginTest@6e9a5ed8]" started-at="2022-11-05T16:24:14 ICT" name="terminate" finished-at="2022-11-05T16:24:14 ICT" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- terminate -->
      </class> <!-- com.automation.test.TC_LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
